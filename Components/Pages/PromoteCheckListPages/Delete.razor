@page "/promotechecklists/delete"
@using Microsoft.EntityFrameworkCore
@using GoodsWebApp.Models
@inject IDbContextFactory<GoodsWebApp.Data.GoodsWebAppContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>PromoteCheckList</h2>
    <hr />
    @if (promotechecklist is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">UserID</dt>
            <dd class="col-sm-10">@promotechecklist.UserID</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BatchID</dt>
            <dd class="col-sm-10">@promotechecklist.BatchID</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SharePicURL</dt>
            <dd class="col-sm-10">@promotechecklist.SharePicURL</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CheckPromoteStatus</dt>
            <dd class="col-sm-10">@promotechecklist.CheckPromoteStatus</dd>
        </dl>
        <EditForm method="post" Model="promotechecklist" OnValidSubmit="DeletePromoteCheckList" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(promotechecklist is null)">Delete</button> |
            <a href="/promotechecklists">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private PromoteCheckList? promotechecklist;

    [SupplyParameterFromQuery]
    private int promoteUniqueID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        promotechecklist = await context.PromoteCheckList.FirstOrDefaultAsync(m => m.promoteUniqueID == promoteUniqueID);

        if (promotechecklist is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeletePromoteCheckList()
    {
        using var context = DbFactory.CreateDbContext();
        context.PromoteCheckList.Remove(promotechecklist!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/promotechecklists");
    }
}
